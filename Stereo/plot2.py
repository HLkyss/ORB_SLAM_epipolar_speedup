import matplotlib.pyplot as plt
import numpy as np

# outdoor fov100 
x1_values = [0,40,80,120,160,200,240,280,320,360,400]
y1_values = [
    [7.842755,10.08038,8.502879,11.197519,8.325804,10.703342,11.087764,9.613518,8.419832],
    [8.08401,11.565906,8.935386,7.923471,11.234673,9.066249,6.952262,10.429015,8.066129],
    [9.201587,8.515652,6.099641,12.213254,11.954381,10.984109,10.281781,7.328674,6.180741],
    [9.201587,8.515652,6.099641,12.213254,11.954381,10.984109,10.281781,7.328674,6.180741],
    [7.337871,9.538182,8.346783,8.161665,7.112105,8.951059,8.766021,8.260184,8.38243],
    [9.810017,9.386755,6.215474,7.775124,8.209672,9.749421,7.220686,7.724997,6.844364],
    [6.910516,7.858434,5.622936,8.898028,6.692587,6.306706,8.541626,9.660458,8.73513],
    [6.910516,7.858434,5.622936,8.898028,6.692587,6.306706,8.541626,9.660458,8.73513],
    [10.170677,7.971215,9.033487,9.495374,6.830037,5.814493,7.273703,11.90774,8.276646],
    [9.838316,10.333119,7.546583,11.195284,6.591574,9.623341,11.430387,12.393136,11.646839],
    [13.521865,26.623621,10.316954,17.456183,13.805144,9.136168,9.710251,6.542049,12.855112]
]
y1_mean = np.mean([np.array(vals) for vals in y1_values], axis=1)# 将每组实验数据转换为NumPy数组并计算平均值和标准差
y1_std = np.std([np.array(vals) for vals in y1_values], axis=1)

# outdoor fov90 
# x2_values = [0,40,80,120,160,200,240,280,320,360,400]
# y2_values = [
#     [12.683974,10.071185,10.904685,9.240103,10.181811,9.319663,9.476709,9.087927,8.344845,11.556293],
#     [10.216867,8.514485,10.404397,9.347918,9.583326,9.325754,13.291657,9.098859,9.118443,8.66004],
#     [8.505233,10.035002,8.267923,9.334384,10.039013,8.764589,8.538668,7.471768,8.529873,8.627031],
#     [10.010919,6.891191,8.898695,7.872256,10.484981,8.415429,7.335425,9.115431,9.589875,7.931998],
#     [9.060383,10.000109,8.608346,8.517748,9.362557,9.186312,8.99109,10.067626,6.115791,7.087007],
#     [8.64246,8.609906,7.600813,8.175331,7.505901,7.286154,8.331246,9.141454,7.638113,10.213697],
#     [8.272824,8.683289,7.432689,8.528782,8.269293,7.417859,8.737067,7.251917,7.248665,8.777505],
#     [6.96938,6.398807,7.214797,8.052418,6.760858,8.248462,6.005755,6.128969,5.131139,8.916241],
#     [6.63134,8.969936,8.728822,8.725661,9.507639,9.221388,6.330767,10.249687,9.424197,10.585351],
#     [8.920269,8.450492,11.514479,8.490019,11.128611,9.157364,10.91704,8.540857,8.997926,10.738603],
#     [11.176119,10.857626,10.912617,9.041569,10.515167,9.332178,10.469001,9.480592,12.902606,10.957691]
# ]
# y2_mean = np.mean([np.array(vals) for vals in y2_values], axis=1)
# y2_std = np.std([np.array(vals) for vals in y2_values], axis=1)

# outdoor fov110 
x3_values = [0,40,80,120,160,200,240,280,320,360,400]
y3_values = [
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
]
y3_mean = np.mean([np.array(vals) for vals in y3_values], axis=1)
y3_std = np.std([np.array(vals) for vals in y3_values], axis=1)

# outdoor fov100 10hz

# outdoor fov100 15hz

# outdoor fov100 30hz

# 绘制三条曲线和误差棒
# plt.errorbar(x1_values, y1_mean, yerr=y1_std, label='Task 1')
# plt.errorbar(x2_values, y2_mean, yerr=y2_std, label='Task 2')
plt.errorbar(x3_values, y3_mean, yerr=y3_std, label='Task 3')

plt.xlabel('mono area')
plt.ylabel('average of ape')
plt.title('ape of different mono area')
plt.legend()
plt.grid(True)
plt.show()
